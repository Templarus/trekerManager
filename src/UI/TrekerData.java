/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.sql.Date;
import static javax.swing.ListSelectionModel.SINGLE_SELECTION;

/**
 *
 * @author RusTe
 */
public class TrekerData extends javax.swing.JFrame {

    private DatabaseTableModel dbm = new DatabaseTableModel(false);
    private DatabaseTableModel dbmDeviceTimeWork = new DatabaseTableModel(false);
    private DatabaseTableModel dbmDeviceTimeWorkExtend = new DatabaseTableModel(false);

    /**
     * Creates new form TrekerData
     */
    public TrekerData() {
        initComponents();
        
        try {
            dbm.setDataSource(Start.mf.sdb.getSTreker());
        } catch (Exception ex) {
            System.out.println("Создание таблицы перенаправленные ошибка доступа к RS" + ex);
        }
        try {
            dbmDeviceTimeWork.setDataSource(Start.mf.sdb.getDeviceTimeWork());
        } catch (Exception ex) {
            System.out.println("Создание таблицы отработано времени по дням ошибка доступа к RS" + ex);
        }
        try {
            dbmDeviceTimeWorkExtend.setDataSource(Start.mf.sdb.getDeviceTimeWorkExtend());
        } catch (Exception ex) {
            System.out.println("Создание таблицы отработано времени по дням расшифровка ошибка доступа к RS" + ex);
        }
        sTreker.setSelectionMode(SINGLE_SELECTION);
        DeviceTimeWorkForDay.setSelectionMode(SINGLE_SELECTION);
        
        sTreker.getColumnModel().getColumn(0).setPreferredWidth(100);
        sTreker.getColumnModel().getColumn(1).setPreferredWidth(20);
        sTreker.getColumnModel().getColumn(2).setPreferredWidth(20);
        
        DeviceTimeWorkForDay.getColumnModel().getColumn(0).setPreferredWidth(80);
        DeviceTimeWorkForDay.getColumnModel().getColumn(1).setPreferredWidth(40);
        DeviceTimeWorkForDay.getColumnModel().getColumn(2).setPreferredWidth(120);
        
        DeviceTimeWorkForDayExtend.getColumnModel().getColumn(0).setPreferredWidth(80);
        DeviceTimeWorkForDayExtend.getColumnModel().getColumn(1).setPreferredWidth(30);
        DeviceTimeWorkForDayExtend.getColumnModel().getColumn(2).setPreferredWidth(100);
        DeviceTimeWorkForDayExtend.getColumnModel().getColumn(3).setPreferredWidth(120);
        DeviceTimeWorkForDayExtend.getColumnModel().getColumn(4).setPreferredWidth(120);
        
        
        sTreker.setRowSelectionInterval(0,0);
        DeviceTimeWorkForDay.setRowSelectionInterval(0,0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sTreker = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        DeviceTimeWorkForDayExtend = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        DeviceTimeWorkForDay = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        butRaschet = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Информация по трекерам");

        sTreker.setAutoCreateRowSorter(true);
        sTreker.setModel(dbm);
        sTreker.setToolTipText("");
        sTreker.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        sTreker.setFocusable(false);
        sTreker.getTableHeader().setReorderingAllowed(false);
        sTreker.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sTrekerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(sTreker);
        sTreker.getTableHeader().setReorderingAllowed(false);

        DeviceTimeWorkForDayExtend.setModel(dbmDeviceTimeWorkExtend);
        jScrollPane2.setViewportView(DeviceTimeWorkForDayExtend);

        DeviceTimeWorkForDay.setModel(dbmDeviceTimeWork);
        DeviceTimeWorkForDay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeviceTimeWorkForDayMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(DeviceTimeWorkForDay);

        jLabel2.setText("Время работы по дням");

        jLabel3.setText("Список трекеров");

        jLabel4.setText("Расшифровка работы трекера");

        butRaschet.setText("Рассчитать данные");
        butRaschet.setToolTipText("");
        butRaschet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRaschetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1208, Short.MAX_VALUE)
                .addGap(315, 315, 315))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(butRaschet, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butRaschet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butRaschetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRaschetActionPerformed
        MainForm.sdb.updDeviceTimeWork();
    }//GEN-LAST:event_butRaschetActionPerformed

    private void sTrekerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sTrekerMouseClicked
        if(evt.getClickCount() == 2){
        Date dtFirst = new Date(-2208978000000L);
        String deviceId = (String)sTreker.getValueAt(sTreker.getSelectedRow(), 0);
        String sql = "SELECT deviceId AS Устройство, dtWork AS Дата, SUM(timeWorkin) AS [Время отработанное(мин)] FROM DeviceTimeWork GROUP BY deviceId, dtWork HAVING (deviceId = N'" + deviceId + "') ORDER BY Дата";
        try {
            dbmDeviceTimeWork.setDataSource(Start.mf.sdb.selectDb(sql));
        } catch (Exception ex) {
            System.out.println("Переход между записями в талице спр трекеров ошибка доступа к RS" + ex);
        }
        if(DeviceTimeWorkForDay.getRowCount() > 0){
        DeviceTimeWorkForDay.setRowSelectionInterval(0,0);
        dtFirst = (Date)DeviceTimeWorkForDay.getValueAt(DeviceTimeWorkForDay.getSelectedRow(), 1);
        }
         sql = "SELECT deviceId AS Устройство, dtWork AS Дата,CONVERT(nvarchar(8),timeBegin) as [Время начала работы], CONVERT(nvarchar(8),timeEnd) as [Время окончания работы], timeWorkin  AS [Время отработанное(мин)] FROM DeviceTimeWork WHERE deviceId = N'" + deviceId + "' AND dtWork = '" + dtFirst.toString() +  "' ORDER BY timeBegin";
        try {
            dbmDeviceTimeWorkExtend.setDataSource(Start.mf.sdb.selectDb(sql));
        } catch (Exception ex) {
            System.out.println("Переход между записями в талице спр трекеров ошибка доступа к RS -обвноыление таблицы расшифровки" + ex);
        }
        }
    }//GEN-LAST:event_sTrekerMouseClicked

    private void DeviceTimeWorkForDayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeviceTimeWorkForDayMouseClicked
        if(evt.getClickCount() == 2){
        Date dtFirst = (Date)DeviceTimeWorkForDay.getValueAt(DeviceTimeWorkForDay.getSelectedRow(), 1);
        String deviceId = (String)sTreker.getValueAt(sTreker.getSelectedRow(), 0);
        String sql = "SELECT deviceId AS Устройство, dtWork AS Дата, CONVERT(nvarchar(8),timeBegin) as [Время начала работы], CONVERT(nvarchar(8),timeEnd) as [Время окончания работы], timeWorkin  AS [Время отработанное(мин)] FROM DeviceTimeWork WHERE deviceId = N'" + deviceId + "' AND dtWork = '" + dtFirst.toString() +  "' ORDER BY timeBegin";
        try {
            dbmDeviceTimeWorkExtend.setDataSource(Start.mf.sdb.selectDb(sql));
        } catch (Exception ex) {
            System.out.println("Переход между записями в талице время работы устройства ошибка доступа к RS -обвноыление таблицы расшифровки" + ex);
        }    
        }
    }//GEN-LAST:event_DeviceTimeWorkForDayMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrekerData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrekerData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrekerData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrekerData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TrekerData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DeviceTimeWorkForDay;
    private javax.swing.JTable DeviceTimeWorkForDayExtend;
    private javax.swing.JButton butRaschet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable sTreker;
    // End of variables declaration//GEN-END:variables
}
